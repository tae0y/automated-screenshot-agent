name: on-pull-requests-step01
on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'step01/**'
      - '.github/workflows/on-pull-requests-step01.yaml'

jobs:
  step01:
    runs-on: ubuntu-latest
    env:
      UV_CACHE_DIR: /tmp/.uv-cache
      PLAYWRIGHT_BROWSERS_PATH: ${{ github.workspace }}/step01/.playwright
    defaults:
      run:
        working-directory: ./step01

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup system Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Cache pip and venv
        id: cache-pip
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/step01/.venv
            ${{ github.workspace }}/step01/.cache/pip
            ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('step01/pyproject.toml','step01/requirements.txt','step01/poetry.lock') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Cache Playwright browsers
        id: cache-playwright
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/step01/.playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('step01/pyproject.toml','step01/requirements.txt','step01/poetry.lock') }}
          restore-keys: ${{ runner.os }}-playwright-

      - name: Restore uv cache
        id: cache-uv
        uses: actions/cache@v4
        with:
          path: /tmp/.uv-cache
          key: uv-${{ runner.os }}-${{ hashFiles('step01/uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ hashFiles('step01/uv.lock') }}
            uv-${{ runner.os }}

      - name: Show cache status
        run: |
          echo "pip cache hit = ${{ steps.cache-pip.outputs.cache-hit }}"
          echo "playwright cache hit = ${{ steps.cache-playwright.outputs.cache-hit }}"
          echo "uv cache hit = ${{ steps.cache-uv.outputs.cache-hit }}"

      - name: Install uv (astral-sh)
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Sync dependencies (timed)
        run: |
          echo "=== uv sync start ==="
          time uv sync --all-groups
          echo "=== uv sync done ==="

      - name: Install Playwright browsers (only if cache miss)
        if: ${{ steps.cache-playwright.outputs.cache-hit != 'true' }}
        run: uv run playwright install

      - name: Start app and wait for readiness
        run: |
          uv run uvicorn src.screenshotAgent:app --port 9910 &
          for i in $(seq 1 30); do
            if curl -sSf http://localhost:9910/openapi.json >/dev/null 2>&1; then
              echo "app ready"
              break
            fi
            echo "waiting for app... ($i)"
            sleep 1
          done

      - name: Smoke tests
        run: curl -sSf http://localhost:9910/openapi.json -o openapi.json

      - name: Run tests
        run: |
          PYTHONPATH=$PWD uv run pytest tests

      - name: Stop app and ensure uv processes stopped
        run: |
          if [ -f /tmp/uvicorn.pid ]; then
            kill "$(cat /tmp/uvicorn.pid)" || true
            rm -f /tmp/uvicorn.pid
          else
            pkill -f "uv run uvicorn" || true
          fi
          for i in $(seq 1 10); do
            if ! pgrep -f 'uv ' >/dev/null 2>&1; then
              break
            fi
            sleep 1
          done
          echo "uv processes cleared."

      - name: Minimize uv cache
        run: uv cache prune --ci
